## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Clip Management'
description: |-

  APIs for managing URL clips (shortened URLs)
endpoints:
  -
    httpMethods:
      - GET
    uri: api/clips
    metadata:
      groupName: 'Clip Management'
      groupDescription: |-

        APIs for managing URL clips (shortened URLs)
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all clips'
      description: 'Retrieve all clips belonging to the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Successfully Retrieved Clips",
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "url": "https://example.com/very-long-url",
                      "slug": "abc123",
                      "password": null,
                      "expires_at": null,
                      "created_at": "2023-01-01T00:00:00.000000Z",
                      "updated_at": "2023-01-01T00:00:00.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4P68DE561Za3haceVvfkbdg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/clip
    metadata:
      groupName: 'Clip Management'
      groupDescription: |-

        APIs for managing URL clips (shortened URLs)
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new clip'
      description: 'Create a new shortened URL clip.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'The URL to shorten.'
        required: true
        example: 'https://example.com/very-long-url'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      slug:
        name: slug
        description: 'optional Custom slug for the shortened URL.'
        required: false
        example: my-custom-slug
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'optional Password to protect the clip.'
        required: false
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      expires_at:
        name: expires_at
        description: 'optional Expiration date for the clip (ISO 8601 format).'
        required: false
        example: '2023-12-31T23:59:59Z'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      url: 'https://example.com/very-long-url'
      slug: my-custom-slug
      password: secret123
      expires_at: '2023-12-31T23:59:59Z'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Successfully Created Clip",
              "success": true,
              "data": {
                  "id": 1,
                  "url": "https://example.com/very-long-url",
                  "slug": "abc123",
                  "password": null,
                  "expires_at": null,
                  "created_at": "2023-01-01T00:00:00.000000Z",
                  "updated_at": "2023-01-01T00:00:00.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "The url field is required.",
              "success": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5gaPDaEd14h3Vfe6vZ68kbc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/clip/{id}'
    metadata:
      groupName: 'Clip Management'
      groupDescription: |-

        APIs for managing URL clips (shortened URLs)
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a clip'
      description: 'Update an existing clip by its ID.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the clip to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'The URL to shorten.'
        required: true
        example: 'https://example.com/updated-url'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      slug:
        name: slug
        description: 'optional Custom slug for the shortened URL.'
        required: false
        example: updated-slug
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'optional Password to protect the clip.'
        required: false
        example: newsecret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      expires_at:
        name: expires_at
        description: 'optional Expiration date for the clip (ISO 8601 format).'
        required: false
        example: '2023-12-31T23:59:59Z'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      url: 'https://example.com/updated-url'
      slug: updated-slug
      password: newsecret123
      expires_at: '2023-12-31T23:59:59Z'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Successfully Updated Clip",
              "success": true,
              "data": {
                  "id": 1,
                  "url": "https://example.com/updated-url",
                  "slug": "updated-slug",
                  "password": null,
                  "expires_at": null,
                  "created_at": "2023-01-01T00:00:00.000000Z",
                  "updated_at": "2023-01-01T12:00:00.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "The url field is required.",
              "success": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Clip not found",
              "success": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hkePa1V48Edav6Z3bf5gDc6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/clip/{slug}'
    metadata:
      groupName: 'Clip Management'
      groupDescription: |-

        APIs for managing URL clips (shortened URLs)
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a clip by slug'
      description: |-
        Retrieve a specific clip by its slug. If the clip is password protected,
        the password must be provided in the request.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the clip to retrieve.'
        required: true
        example: abc123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      slug: abc123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'optional Password for protected clips.'
        required: false
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      password: secret123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Successfully Retrieved Clip",
              "success": true,
              "data": {
                  "id": 1,
                  "url": "https://example.com/very-long-url",
                  "slug": "abc123",
                  "password": null,
                  "expires_at": null,
                  "created_at": "2023-01-01T00:00:00.000000Z",
                  "updated_at": "2023-01-01T00:00:00.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "The slug field is required.",
              "success": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "Incorrect password",
              "success": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Clip not found",
              "success": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 41aacvbPeV6gD6fkZ3E8d5h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/clip/{id}'
    metadata:
      groupName: 'Clip Management'
      groupDescription: |-

        APIs for managing URL clips (shortened URLs)
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a clip'
      description: 'Delete a clip by its ID.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the clip to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Successfully Deleted Clip",
              "success": true,
              "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "The id field is required.",
              "success": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Clip not found",
              "success": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g3k8v16EbZ6dcaPe4ahVD5f'
    controller: null
    method: null
    route: null
    custom: []
